!function(n){"use strict";if("object"==typeof module&&module&&"object"==typeof module.exports)module.exports=n();else{if("undefined"==typeof window&&"undefined"==typeof self)throw new Error("Environment was not anticipated.");var t="undefined"!=typeof window?window:self,e=t.amp;t.amp=n(),t.amp.noConflict=function(){return t.amp=e,this}}}(function(){"use strict";function n(n){var e={};r(n.data.content["@graph"],function(n){e[n["@id"]]=n}),console.log(e);var o=n.data.requestedContent[0]["@id"];return t({"@id":o},e)}function t(n,i){return r(o(n),function(t){var e=n[t];"@id"===t&&r(o(i[e]),function(t){n[t]=i[e][t]})}),r(o(n),function(o){var f=n[o];null!==f&&"object"==typeof f?n[o]=t(n[o],i):e(f)&&r(f,function(e,r){n[o][r]=t(n[o][r],i)})}),n}var e=Array.isArray||function(n){return"[object Array]"===Object.prototype.toString.call(n)},o=Object.keys||function(n){var t=[];for(var e in n)n.hasOwnProperty(e)&&t.push(e);return t},r=function(n,t,o){if(e(n))if(n.forEach)n.forEach(t,o);else for(var r=0,i=n.length;i>r;r++)t.call(o,n[r],r,n)};return{inlineContent:n}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNtcy1qYXZhc2NyaXB0LXNkay5qcyJdLCJuYW1lcyI6WyJkZWZpbml0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyIsIndpbmRvdyIsInNlbGYiLCJFcnJvciIsImdsb2JhbCIsInByZXZpb3VzQW1wIiwiYW1wIiwibm9Db25mbGljdCIsInRoaXMiLCJpbmxpbmVDb250ZW50IiwiY29udGVudCIsImNvbnRlbnRNYXAiLCJfZm9yRWFjaCIsImRhdGEiLCJjb25zb2xlIiwibG9nIiwicmVxdWVzdGVkQ29udGVudCIsImlubGluZUNoaWxkQ29udGVudCIsIkBpZCIsInBhcmVudE5vZGUiLCJfa2V5cyIsImtleSIsInZhbHVlIiwiY2hpbGRLZXkiLCJfaXNBcnJheSIsIml0ZW0iLCJpIiwiQXJyYXkiLCJpc0FycmF5IiwiYXJnIiwiT2JqZWN0IiwicHJvdG90eXBlIiwidG9TdHJpbmciLCJjYWxsIiwia2V5cyIsIm9iaiIsImsiLCJoYXNPd25Qcm9wZXJ0eSIsInB1c2giLCJhcnIiLCJpdGVyYXRvciIsImNvbnRleHQiLCJmb3JFYWNoIiwibGVuIiwibGVuZ3RoIl0sIm1hcHBpbmdzIjoiQ0FDQSxTQUFXQSxHQUNQLFlBRUEsSUFBdUIsZ0JBQVhDLFNBQXVCQSxRQUFvQyxnQkFBbkJBLFFBQU9DLFFBQ3ZERCxPQUFPQyxRQUFVRixRQUNkLENBQUEsR0FBc0IsbUJBQVhHLFNBQTBDLG1CQUFUQyxNQVUvQyxLQUFNLElBQUlDLE9BQU0sbUNBVGhCLElBQUlDLEdBQTJCLG1CQUFYSCxRQUF5QkEsT0FBU0MsS0FFbERHLEVBQWNELEVBQU9FLEdBQ3pCRixHQUFPRSxJQUFNUixJQUNiTSxFQUFPRSxJQUFJQyxXQUFhLFdBRXBCLE1BREFILEdBQU9FLElBQU1ELEVBQ05HLFFBTWhCLFdBQ0MsWUE2QkEsU0FBU0MsR0FBY0MsR0FDbkIsR0FBSUMsS0FDSkMsR0FBU0YsRUFBUUcsS0FBS0gsUUFBUSxVQUFXLFNBQVNBLEdBQzlDQyxFQUFXRCxFQUFRLFFBQVVBLElBRWpDSSxRQUFRQyxJQUFJSixFQUNaLElBQUlLLEdBQW1CTixFQUFRRyxLQUFLRyxpQkFBaUIsR0FBRyxNQUN4RCxPQUFRQyxJQUFvQkMsTUFBT0YsR0FBbUJMLEdBRzFELFFBQVNNLEdBQW1CRSxFQUFZUixHQW9CcEMsTUFuQkFDLEdBQVNRLEVBQU1ELEdBQWEsU0FBU0UsR0FDakMsR0FBSUMsR0FBUUgsRUFBV0UsRUFDWixTQUFSQSxHQUNDVCxFQUFTUSxFQUFNVCxFQUFXVyxJQUFTLFNBQVNDLEdBQ3hDSixFQUFXSSxHQUFZWixFQUFXVyxHQUFPQyxPQUtyRFgsRUFBU1EsRUFBTUQsR0FBYSxTQUFTRSxHQUNqQyxHQUFJQyxHQUFRSCxFQUFXRSxFQUNWLFFBQVZDLEdBQW1DLGdCQUFWQSxHQUN4QkgsRUFBV0UsR0FBT0osRUFBbUJFLEVBQVdFLEdBQU1WLEdBQ2pEYSxFQUFTRixJQUNkVixFQUFTVSxFQUFPLFNBQVNHLEVBQU1DLEdBQzNCUCxFQUFXRSxHQUFLSyxHQUFLVCxFQUFtQkUsRUFBV0UsR0FBS0ssR0FBSWYsT0FJakVRLEVBMURYLEdBQUlLLEdBQVdHLE1BQU1DLFNBQVcsU0FBVUMsR0FDdEMsTUFBK0MsbUJBQXhDQyxPQUFPQyxVQUFVQyxTQUFTQyxLQUFLSixJQUd0Q1QsRUFBUVUsT0FBT0ksTUFBUSxTQUFVQyxHQUNqQyxHQUFJRCxLQUNKLEtBQUssR0FBSUUsS0FBS0QsR0FDTkEsRUFBSUUsZUFBZUQsSUFDbkJGLEVBQUtJLEtBQUtGLEVBR2xCLE9BQU9GLElBR1B0QixFQUFXLFNBQVMyQixFQUFLQyxFQUFVQyxHQUNuQyxHQUFJakIsRUFBU2UsR0FJYixHQUFHQSxFQUFJRyxRQUNISCxFQUFJRyxRQUFRRixFQUFVQyxPQUV0QixLQUFJLEdBQUlwQixHQUFNLEVBQUdzQixFQUFNSixFQUFJSyxPQUFjRCxFQUFOdEIsRUFBV0EsSUFDMUNtQixFQUFTUCxLQUFLUSxFQUFTRixFQUFJbEIsR0FBTUEsRUFBS2tCLEdBc0NsRCxRQUNJOUIsY0FBY0EiLCJmaWxlIjoiY21zLWphdmFzY3JpcHQtc2RrLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qZ2xvYmFsIHdpbmRvdyBzZWxmKi9cclxuKGZ1bmN0aW9uIChkZWZpbml0aW9uKSB7XHJcbiAgICBcInVzZSBzdHJpY3RcIjtcclxuXHJcbiAgICBpZiAoIHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgbW9kdWxlICYmIHR5cGVvZiBtb2R1bGUuZXhwb3J0cyA9PT0gXCJvYmplY3RcIiApIHtcclxuICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGRlZmluaXRpb24oKTtcclxuICAgIH0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiB8fCB0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIikge1xyXG4gICAgICAgIHZhciBnbG9iYWwgPSB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDogc2VsZjtcclxuXHJcbiAgICAgICAgdmFyIHByZXZpb3VzQW1wID0gZ2xvYmFsLmFtcDtcclxuICAgICAgICBnbG9iYWwuYW1wID0gZGVmaW5pdGlvbigpO1xyXG4gICAgICAgIGdsb2JhbC5hbXAubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgZ2xvYmFsLmFtcCA9IHByZXZpb3VzQW1wO1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcztcclxuICAgICAgICB9O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJFbnZpcm9ubWVudCB3YXMgbm90IGFudGljaXBhdGVkLlwiKTtcclxuICAgIH1cclxuXHJcbn0pKGZ1bmN0aW9uKCl7XHJcbiAgICBcInVzZSBzdHJpY3RcIjtcclxuICAgIHZhciBfaXNBcnJheSA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFyZykge1xyXG4gICAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJnKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcclxuICAgIH07XHJcblxyXG4gICAgdmFyIF9rZXlzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24gKG9iaikge1xyXG4gICAgICAgIHZhciBrZXlzID0gW107XHJcbiAgICAgICAgZm9yICh2YXIgayBpbiBvYmopIHtcclxuICAgICAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrKSkge1xyXG4gICAgICAgICAgICAgICAga2V5cy5wdXNoKGspO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBrZXlzO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgX2ZvckVhY2ggPSBmdW5jdGlvbihhcnIsIGl0ZXJhdG9yLCBjb250ZXh0KXtcclxuICAgICAgICBpZighX2lzQXJyYXkoYXJyKSl7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmKGFyci5mb3JFYWNoKXtcclxuICAgICAgICAgICAgYXJyLmZvckVhY2goaXRlcmF0b3IsIGNvbnRleHQpO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICBmb3IodmFyIGtleSA9IDAsIGxlbiA9IGFyci5sZW5ndGg7IGtleSA8IGxlbjsga2V5Kyspe1xyXG4gICAgICAgICAgICAgICAgaXRlcmF0b3IuY2FsbChjb250ZXh0LCBhcnJba2V5XSwga2V5LCBhcnIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuXHJcbiAgICBmdW5jdGlvbiBpbmxpbmVDb250ZW50KGNvbnRlbnQpe1xyXG4gICAgICAgIHZhciBjb250ZW50TWFwID0ge307XHJcbiAgICAgICAgX2ZvckVhY2goY29udGVudC5kYXRhLmNvbnRlbnRbJ0BncmFwaCddLCBmdW5jdGlvbihjb250ZW50KXtcclxuICAgICAgICAgICAgY29udGVudE1hcFtjb250ZW50WydAaWQnXV0gPSBjb250ZW50O1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGNvbnRlbnRNYXApXHJcbiAgICAgICAgdmFyIHJlcXVlc3RlZENvbnRlbnQgPSBjb250ZW50LmRhdGEucmVxdWVzdGVkQ29udGVudFswXVtcIkBpZFwiXTtcclxuICAgICAgICByZXR1cm4gIGlubGluZUNoaWxkQ29udGVudCh7XCJAaWRcIjogcmVxdWVzdGVkQ29udGVudH0sIGNvbnRlbnRNYXApXHJcbiAgICB9XHJcblxyXG4gICAgZnVuY3Rpb24gaW5saW5lQ2hpbGRDb250ZW50KHBhcmVudE5vZGUsIGNvbnRlbnRNYXApe1xyXG4gICAgICAgIF9mb3JFYWNoKF9rZXlzKHBhcmVudE5vZGUpLCBmdW5jdGlvbihrZXkpe1xyXG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBwYXJlbnROb2RlW2tleV07XHJcbiAgICAgICAgICAgIGlmKGtleSA9PT0gJ0BpZCcpe1xyXG4gICAgICAgICAgICAgICAgX2ZvckVhY2goX2tleXMoY29udGVudE1hcFt2YWx1ZV0pLCBmdW5jdGlvbihjaGlsZEtleSl7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Tm9kZVtjaGlsZEtleV0gPSBjb250ZW50TWFwW3ZhbHVlXVtjaGlsZEtleV07XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIF9mb3JFYWNoKF9rZXlzKHBhcmVudE5vZGUpLCBmdW5jdGlvbihrZXkpe1xyXG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBwYXJlbnROb2RlW2tleV07XHJcbiAgICAgICAgICAgIGlmKHZhbHVlICE9PSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpe1xyXG4gICAgICAgICAgICAgICAgcGFyZW50Tm9kZVtrZXldID0gaW5saW5lQ2hpbGRDb250ZW50KHBhcmVudE5vZGVba2V5XSwgY29udGVudE1hcCk7XHJcbiAgICAgICAgICAgIH1lbHNlIGlmKF9pc0FycmF5KHZhbHVlKSl7XHJcbiAgICAgICAgICAgICAgICBfZm9yRWFjaCh2YWx1ZSwgZnVuY3Rpb24oaXRlbSwgaSl7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Tm9kZVtrZXldW2ldID0gaW5saW5lQ2hpbGRDb250ZW50KHBhcmVudE5vZGVba2V5XVtpXSwgY29udGVudE1hcCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBwYXJlbnROb2RlO1xyXG4gICAgfVxyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgaW5saW5lQ29udGVudDppbmxpbmVDb250ZW50XHJcbiAgICB9O1xyXG59KTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
