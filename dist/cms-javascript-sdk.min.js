!function(n){"use strict";if("object"==typeof module&&module&&"object"==typeof module.exports)module.exports=n();else{if("undefined"==typeof window&&"undefined"==typeof self)throw new Error("Environment was not anticipated.");var t="undefined"!=typeof window?window:self,e=t.amp;t.amp=n(),t.amp.noConflict=function(){return t.amp=e,this}}}(function(){"use strict";function n(n){var e=[],o={};return n&&(r(n["@graph"],function(n){o[n["@id"]]=n}),r(n.result,function(n){if(n["@id"]){var r=t({"@id":n["@id"]},o);r&&e.push(r)}})),e}function t(n,i){return r(o(n),function(t){var e=n[t];if("@id"===t){if(!i[e])return;r(o(i[e]),function(t){n[t]=i[e][t]})}}),r(o(n),function(o){var f=n[o];null!==f&&"object"==typeof f?n[o]=t(n[o],i):e(f)&&r(f,function(e,r){n[o][r]=t(n[o][r],i)})}),n}var e=Array.isArray||function(n){return"[object Array]"===Object.prototype.toString.call(n)},o=Object.keys||function(n){var t=[];for(var e in n)n.hasOwnProperty(e)&&t.push(e);return t},r=function(n,t,o){if(e(n))if(n.forEach)n.forEach(t,o);else for(var r=0,i=n.length;i>r;r++)t.call(o,n[r],r,n)};return{inlineContent:n}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNtcy1qYXZhc2NyaXB0LXNkay5qcyJdLCJuYW1lcyI6WyJkZWZpbml0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyIsIndpbmRvdyIsInNlbGYiLCJFcnJvciIsImdsb2JhbCIsInByZXZpb3VzQW1wIiwiYW1wIiwibm9Db25mbGljdCIsInRoaXMiLCJpbmxpbmVDb250ZW50IiwiZGVsaXZlcnkiLCJpbmxpbmVkQ29udGVudCIsImNvbnRlbnRLZXlNYXAiLCJfZm9yRWFjaCIsImNvbnRlbnQiLCJyZXN1bHQiLCJpbmxpbmVDaGlsZENvbnRlbnQiLCJAaWQiLCJwdXNoIiwicGFyZW50Tm9kZSIsIl9rZXlzIiwia2V5IiwidmFsdWUiLCJjaGlsZEtleSIsIl9pc0FycmF5IiwiaXRlbSIsImkiLCJBcnJheSIsImlzQXJyYXkiLCJhcmciLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJrZXlzIiwib2JqIiwiayIsImhhc093blByb3BlcnR5IiwiYXJyIiwiaXRlcmF0b3IiLCJjb250ZXh0IiwiZm9yRWFjaCIsImxlbiIsImxlbmd0aCJdLCJtYXBwaW5ncyI6IkNBRUEsU0FBV0EsR0FDUCxZQUVBLElBQXNCLGdCQUFYQyxTQUF1QkEsUUFBb0MsZ0JBQW5CQSxRQUFPQyxRQUN0REQsT0FBT0MsUUFBVUYsUUFDZCxDQUFBLEdBQXNCLG1CQUFYRyxTQUEwQyxtQkFBVEMsTUFVL0MsS0FBTSxJQUFJQyxPQUFNLG1DQVRoQixJQUFJQyxHQUEyQixtQkFBWEgsUUFBeUJBLE9BQVNDLEtBRWxERyxFQUFjRCxFQUFPRSxHQUN6QkYsR0FBT0UsSUFBTVIsSUFDYk0sRUFBT0UsSUFBSUMsV0FBYSxXQUVwQixNQURBSCxHQUFPRSxJQUFNRCxFQUNORyxRQU1oQixXQUNDLFlBb0NBLFNBQVNDLEdBQWNDLEdBQ25CLEdBQUlDLE1BQ0FDLElBbUJKLE9BakJJRixLQUNBRyxFQUFTSCxFQUFTLFVBQVcsU0FBVUksR0FDbkNGLEVBQWNFLEVBQVEsUUFBVUEsSUFHcENELEVBQVNILEVBQVNLLE9BQVEsU0FBVUEsR0FDaEMsR0FBS0EsRUFBTyxPQUFaLENBSUEsR0FBSUQsR0FBVUUsR0FBb0JDLE1BQU9GLEVBQU8sUUFBU0gsRUFDckRFLElBQ0FILEVBQWVPLEtBQUtKLE9BS3pCSCxFQUdYLFFBQVNLLEdBQW1CRyxFQUFZUCxHQXdCcEMsTUF2QkFDLEdBQVNPLEVBQU1ELEdBQWEsU0FBVUUsR0FDbEMsR0FBSUMsR0FBUUgsRUFBV0UsRUFDdkIsSUFBWSxRQUFSQSxFQUFlLENBQ2YsSUFBS1QsRUFBY1UsR0FDZixNQUVKVCxHQUFTTyxFQUFNUixFQUFjVSxJQUFTLFNBQVVDLEdBQzVDSixFQUFXSSxHQUFZWCxFQUFjVSxHQUFPQyxRQUt4RFYsRUFBU08sRUFBTUQsR0FBYSxTQUFVRSxHQUNsQyxHQUFJQyxHQUFRSCxFQUFXRSxFQUNULFFBQVZDLEdBQW1DLGdCQUFWQSxHQUN6QkgsRUFBV0UsR0FBT0wsRUFBbUJHLEVBQVdFLEdBQU1ULEdBQy9DWSxFQUFTRixJQUNoQlQsRUFBU1MsRUFBTyxTQUFVRyxFQUFNQyxHQUM1QlAsRUFBV0UsR0FBS0ssR0FBS1YsRUFBbUJHLEVBQVdFLEdBQUtLLEdBQUlkLE9BS2pFTyxFQWxGWCxHQU1JSyxHQUFXRyxNQUFNQyxTQUFXLFNBQVVDLEdBQ3RDLE1BQStDLG1CQUF4Q0MsT0FBT0MsVUFBVUMsU0FBU0MsS0FBS0osSUFHdENULEVBQVFVLE9BQU9JLE1BQVEsU0FBVUMsR0FDakMsR0FBSUQsS0FDSixLQUFLLEdBQUlFLEtBQUtELEdBQ05BLEVBQUlFLGVBQWVELElBQ25CRixFQUFLaEIsS0FBS2tCLEVBR2xCLE9BQU9GLElBR1ByQixFQUFXLFNBQVV5QixFQUFLQyxFQUFVQyxHQUNwQyxHQUFLaEIsRUFBU2MsR0FJZCxHQUFJQSxFQUFJRyxRQUNKSCxFQUFJRyxRQUFRRixFQUFVQyxPQUV0QixLQUFLLEdBQUluQixHQUFNLEVBQUdxQixFQUFNSixFQUFJSyxPQUFjRCxFQUFOckIsRUFBV0EsSUFDM0NrQixFQUFTTixLQUFLTyxFQUFTRixFQUFJakIsR0FBTUEsRUFBS2lCLEdBd0RsRCxRQUNJN0IsY0FBZUEiLCJmaWxlIjoiY21zLWphdmFzY3JpcHQtc2RrLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qZ2xvYmFsIHdpbmRvdyBzZWxmKi9cclxuXHJcbihmdW5jdGlvbiAoZGVmaW5pdGlvbikge1xyXG4gICAgJ3VzZSBzdHJpY3QnO1xyXG5cclxuICAgIGlmICh0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0JyAmJiBtb2R1bGUgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSAnb2JqZWN0Jykge1xyXG4gICAgICAgIG1vZHVsZS5leHBvcnRzID0gZGVmaW5pdGlvbigpO1xyXG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJyB8fCB0eXBlb2Ygc2VsZiAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgICB2YXIgZ2xvYmFsID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiBzZWxmO1xyXG5cclxuICAgICAgICB2YXIgcHJldmlvdXNBbXAgPSBnbG9iYWwuYW1wO1xyXG4gICAgICAgIGdsb2JhbC5hbXAgPSBkZWZpbml0aW9uKCk7XHJcbiAgICAgICAgZ2xvYmFsLmFtcC5ub0NvbmZsaWN0ID0gZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICBnbG9iYWwuYW1wID0gcHJldmlvdXNBbXA7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xyXG4gICAgICAgIH07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRW52aXJvbm1lbnQgd2FzIG5vdCBhbnRpY2lwYXRlZC4nKTtcclxuICAgIH1cclxuXHJcbn0pKGZ1bmN0aW9uICgpIHtcclxuICAgICd1c2Ugc3RyaWN0JztcclxuXHJcbiAgICB2YXIgX2xvZyA9IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBpZiAoY29uc29sZSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpKTsvLyBlc2xpbnQtZGlzYWJsZS1saW5lIG5vLWNvbnNvbGVcclxuICAgICAgICB9XHJcbiAgICB9O1xyXG5cclxuICAgIHZhciBfaXNBcnJheSA9IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24gKGFyZykge1xyXG4gICAgICAgIHJldHVybiBPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwoYXJnKSA9PT0gJ1tvYmplY3QgQXJyYXldJztcclxuICAgIH07XHJcblxyXG4gICAgdmFyIF9rZXlzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24gKG9iaikge1xyXG4gICAgICAgIHZhciBrZXlzID0gW107XHJcbiAgICAgICAgZm9yICh2YXIgayBpbiBvYmopIHtcclxuICAgICAgICAgICAgaWYgKG9iai5oYXNPd25Qcm9wZXJ0eShrKSkge1xyXG4gICAgICAgICAgICAgICAga2V5cy5wdXNoKGspO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBrZXlzO1xyXG4gICAgfTtcclxuXHJcbiAgICB2YXIgX2ZvckVhY2ggPSBmdW5jdGlvbiAoYXJyLCBpdGVyYXRvciwgY29udGV4dCkge1xyXG4gICAgICAgIGlmICghX2lzQXJyYXkoYXJyKSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoYXJyLmZvckVhY2gpIHtcclxuICAgICAgICAgICAgYXJyLmZvckVhY2goaXRlcmF0b3IsIGNvbnRleHQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGZvciAodmFyIGtleSA9IDAsIGxlbiA9IGFyci5sZW5ndGg7IGtleSA8IGxlbjsga2V5KyspIHtcclxuICAgICAgICAgICAgICAgIGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgYXJyW2tleV0sIGtleSwgYXJyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgZnVuY3Rpb24gaW5saW5lQ29udGVudChkZWxpdmVyeSkge1xyXG4gICAgICAgIHZhciBpbmxpbmVkQ29udGVudCA9IFtdO1xyXG4gICAgICAgIHZhciBjb250ZW50S2V5TWFwID0ge307XHJcblxyXG4gICAgICAgIGlmIChkZWxpdmVyeSkge1xyXG4gICAgICAgICAgICBfZm9yRWFjaChkZWxpdmVyeVsnQGdyYXBoJ10sIGZ1bmN0aW9uIChjb250ZW50KSB7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50S2V5TWFwW2NvbnRlbnRbJ0BpZCddXSA9IGNvbnRlbnQ7XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgX2ZvckVhY2goZGVsaXZlcnkucmVzdWx0LCBmdW5jdGlvbiAocmVzdWx0KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXJlc3VsdFsnQGlkJ10pIHtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgdmFyIGNvbnRlbnQgPSBpbmxpbmVDaGlsZENvbnRlbnQoeydAaWQnOiByZXN1bHRbJ0BpZCddfSwgY29udGVudEtleU1hcCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoY29udGVudCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGlubGluZWRDb250ZW50LnB1c2goY29udGVudCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuIGlubGluZWRDb250ZW50O1xyXG4gICAgfVxyXG5cclxuICAgIGZ1bmN0aW9uIGlubGluZUNoaWxkQ29udGVudChwYXJlbnROb2RlLCBjb250ZW50S2V5TWFwKSB7XHJcbiAgICAgICAgX2ZvckVhY2goX2tleXMocGFyZW50Tm9kZSksIGZ1bmN0aW9uIChrZXkpIHtcclxuICAgICAgICAgICAgdmFyIHZhbHVlID0gcGFyZW50Tm9kZVtrZXldO1xyXG4gICAgICAgICAgICBpZiAoa2V5ID09PSAnQGlkJykge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFjb250ZW50S2V5TWFwW3ZhbHVlXSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIF9mb3JFYWNoKF9rZXlzKGNvbnRlbnRLZXlNYXBbdmFsdWVdKSwgZnVuY3Rpb24gKGNoaWxkS2V5KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Tm9kZVtjaGlsZEtleV0gPSBjb250ZW50S2V5TWFwW3ZhbHVlXVtjaGlsZEtleV07XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIF9mb3JFYWNoKF9rZXlzKHBhcmVudE5vZGUpLCBmdW5jdGlvbiAoa2V5KSB7XHJcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IHBhcmVudE5vZGVba2V5XTtcclxuICAgICAgICAgICAgaWYgKHZhbHVlICE9PSBudWxsICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcclxuICAgICAgICAgICAgICAgIHBhcmVudE5vZGVba2V5XSA9IGlubGluZUNoaWxkQ29udGVudChwYXJlbnROb2RlW2tleV0sIGNvbnRlbnRLZXlNYXApO1xyXG4gICAgICAgICAgICB9IGVsc2UgaWYgKF9pc0FycmF5KHZhbHVlKSkge1xyXG4gICAgICAgICAgICAgICAgX2ZvckVhY2godmFsdWUsIGZ1bmN0aW9uIChpdGVtLCBpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Tm9kZVtrZXldW2ldID0gaW5saW5lQ2hpbGRDb250ZW50KHBhcmVudE5vZGVba2V5XVtpXSwgY29udGVudEtleU1hcCk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICByZXR1cm4gcGFyZW50Tm9kZTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAgIGlubGluZUNvbnRlbnQ6IGlubGluZUNvbnRlbnRcclxuICAgIH07XHJcbn0pOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
