!function(n){"use strict";if("object"==typeof module&&module&&"object"==typeof module.exports)module.exports=n();else{if("undefined"==typeof window&&"undefined"==typeof self)throw new Error("Environment was not anticipated.");var t="undefined"!=typeof window?window:self,e=t.amp;t.amp=n(),t.amp.noConflict=function(){return t.amp=e,this}}}(function(){"use strict";function n(n){var e=[],o={};return n&&(n&&n.content&&r(n.content["@graph"],function(n){o[n["@id"]]=n}),r(n.result,function(n){if(n["@id"]){var r=t({"@id":n["@id"]},o);r&&e.push(r)}})),e}function t(n,i){return r(o(n),function(t){var e=n[t];if("@id"===t){if(!i[e])return;r(o(i[e]),function(t){n[t]=i[e][t]})}}),r(o(n),function(o){var f=n[o];null!==f&&"object"==typeof f?n[o]=t(n[o],i):e(f)&&r(f,function(e,r){n[o][r]=t(n[o][r],i)})}),n}var e=Array.isArray||function(n){return"[object Array]"===Object.prototype.toString.call(n)},o=Object.keys||function(n){var t=[];for(var e in n)n.hasOwnProperty(e)&&t.push(e);return t},r=function(n,t,o){if(e(n))if(n.forEach)n.forEach(t,o);else for(var r=0,i=n.length;i>r;r++)t.call(o,n[r],r,n)};return{inlineContent:n}});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNtcy1qYXZhc2NyaXB0LXNkay5qcyJdLCJuYW1lcyI6WyJkZWZpbml0aW9uIiwibW9kdWxlIiwiZXhwb3J0cyIsIndpbmRvdyIsInNlbGYiLCJFcnJvciIsImdsb2JhbCIsInByZXZpb3VzQW1wIiwiYW1wIiwibm9Db25mbGljdCIsInRoaXMiLCJpbmxpbmVDb250ZW50IiwiZGVsaXZlcnkiLCJpbmxpbmVkQ29udGVudCIsImNvbnRlbnRLZXlNYXAiLCJjb250ZW50IiwiX2ZvckVhY2giLCJyZXN1bHQiLCJpbmxpbmVDaGlsZENvbnRlbnQiLCJAaWQiLCJwdXNoIiwicGFyZW50Tm9kZSIsIl9rZXlzIiwia2V5IiwidmFsdWUiLCJjaGlsZEtleSIsIl9pc0FycmF5IiwiaXRlbSIsImkiLCJBcnJheSIsImlzQXJyYXkiLCJhcmciLCJPYmplY3QiLCJwcm90b3R5cGUiLCJ0b1N0cmluZyIsImNhbGwiLCJrZXlzIiwib2JqIiwiayIsImhhc093blByb3BlcnR5IiwiYXJyIiwiaXRlcmF0b3IiLCJjb250ZXh0IiwiZm9yRWFjaCIsImxlbiIsImxlbmd0aCJdLCJtYXBwaW5ncyI6IkNBRUEsU0FBV0EsR0FDUCxZQUVBLElBQXNCLGdCQUFYQyxTQUF1QkEsUUFBb0MsZ0JBQW5CQSxRQUFPQyxRQUN0REQsT0FBT0MsUUFBVUYsUUFDZCxDQUFBLEdBQXNCLG1CQUFYRyxTQUEwQyxtQkFBVEMsTUFVL0MsS0FBTSxJQUFJQyxPQUFNLG1DQVRoQixJQUFJQyxHQUEyQixtQkFBWEgsUUFBeUJBLE9BQVNDLEtBRWxERyxFQUFjRCxFQUFPRSxHQUN6QkYsR0FBT0UsSUFBTVIsSUFDYk0sRUFBT0UsSUFBSUMsV0FBYSxXQUVwQixNQURBSCxHQUFPRSxJQUFNRCxFQUNORyxRQU1oQixXQUNDLFlBOEJBLFNBQVNDLEdBQWNDLEdBQ25CLEdBQUlDLE1BQ0FDLElBcUJKLE9BbkJJRixLQUNJQSxHQUFZQSxFQUFTRyxTQUNyQkMsRUFBU0osRUFBU0csUUFBUSxVQUFXLFNBQVVBLEdBQzNDRCxFQUFjQyxFQUFRLFFBQVVBLElBSXhDQyxFQUFTSixFQUFTSyxPQUFRLFNBQVVBLEdBQ2hDLEdBQUtBLEVBQU8sT0FBWixDQUlBLEdBQUlGLEdBQVVHLEdBQW9CQyxNQUFPRixFQUFPLFFBQVNILEVBQ3JEQyxJQUNBRixFQUFlTyxLQUFLTCxPQUt6QkYsRUFHWCxRQUFTSyxHQUFtQkcsRUFBWVAsR0F3QnBDLE1BdkJBRSxHQUFTTSxFQUFNRCxHQUFhLFNBQVVFLEdBQ2xDLEdBQUlDLEdBQVFILEVBQVdFLEVBQ3ZCLElBQVksUUFBUkEsRUFBZSxDQUNmLElBQUtULEVBQWNVLEdBQ2YsTUFFSlIsR0FBU00sRUFBTVIsRUFBY1UsSUFBUyxTQUFVQyxHQUM1Q0osRUFBV0ksR0FBWVgsRUFBY1UsR0FBT0MsUUFLeERULEVBQVNNLEVBQU1ELEdBQWEsU0FBVUUsR0FDbEMsR0FBSUMsR0FBUUgsRUFBV0UsRUFDVCxRQUFWQyxHQUFtQyxnQkFBVkEsR0FDekJILEVBQVdFLEdBQU9MLEVBQW1CRyxFQUFXRSxHQUFNVCxHQUMvQ1ksRUFBU0YsSUFDaEJSLEVBQVNRLEVBQU8sU0FBVUcsRUFBTUMsR0FDNUJQLEVBQVdFLEdBQUtLLEdBQUtWLEVBQW1CRyxFQUFXRSxHQUFLSyxHQUFJZCxPQUtqRU8sRUE5RVgsR0FBSUssR0FBV0csTUFBTUMsU0FBVyxTQUFVQyxHQUN0QyxNQUErQyxtQkFBeENDLE9BQU9DLFVBQVVDLFNBQVNDLEtBQUtKLElBR3RDVCxFQUFRVSxPQUFPSSxNQUFRLFNBQVVDLEdBQ2pDLEdBQUlELEtBQ0osS0FBSyxHQUFJRSxLQUFLRCxHQUNOQSxFQUFJRSxlQUFlRCxJQUNuQkYsRUFBS2hCLEtBQUtrQixFQUdsQixPQUFPRixJQUdQcEIsRUFBVyxTQUFVd0IsRUFBS0MsRUFBVUMsR0FDcEMsR0FBS2hCLEVBQVNjLEdBSWQsR0FBSUEsRUFBSUcsUUFDSkgsRUFBSUcsUUFBUUYsRUFBVUMsT0FFdEIsS0FBSyxHQUFJbkIsR0FBTSxFQUFHcUIsRUFBTUosRUFBSUssT0FBY0QsRUFBTnJCLEVBQVdBLElBQzNDa0IsRUFBU04sS0FBS08sRUFBU0YsRUFBSWpCLEdBQU1BLEVBQUtpQixHQTBEbEQsUUFDSTdCLGNBQWVBIiwiZmlsZSI6ImNtcy1qYXZhc2NyaXB0LXNkay5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKmdsb2JhbCB3aW5kb3cgc2VsZiovXG5cbihmdW5jdGlvbiAoZGVmaW5pdGlvbikge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIGlmICh0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0JyAmJiBtb2R1bGUgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSAnb2JqZWN0Jykge1xuICAgICAgICBtb2R1bGUuZXhwb3J0cyA9IGRlZmluaXRpb24oKTtcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnIHx8IHR5cGVvZiBzZWxmICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICB2YXIgZ2xvYmFsID0gdHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcgPyB3aW5kb3cgOiBzZWxmO1xuXG4gICAgICAgIHZhciBwcmV2aW91c0FtcCA9IGdsb2JhbC5hbXA7XG4gICAgICAgIGdsb2JhbC5hbXAgPSBkZWZpbml0aW9uKCk7XG4gICAgICAgIGdsb2JhbC5hbXAubm9Db25mbGljdCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGdsb2JhbC5hbXAgPSBwcmV2aW91c0FtcDtcbiAgICAgICAgICAgIHJldHVybiB0aGlzO1xuICAgICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRW52aXJvbm1lbnQgd2FzIG5vdCBhbnRpY2lwYXRlZC4nKTtcbiAgICB9XG5cbn0pKGZ1bmN0aW9uICgpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICB2YXIgX2lzQXJyYXkgPSBBcnJheS5pc0FycmF5IHx8IGZ1bmN0aW9uIChhcmcpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcmcpID09PSAnW29iamVjdCBBcnJheV0nO1xuICAgIH07XG5cbiAgICB2YXIgX2tleXMgPSBPYmplY3Qua2V5cyB8fCBmdW5jdGlvbiAob2JqKSB7XG4gICAgICAgIHZhciBrZXlzID0gW107XG4gICAgICAgIGZvciAodmFyIGsgaW4gb2JqKSB7XG4gICAgICAgICAgICBpZiAob2JqLmhhc093blByb3BlcnR5KGspKSB7XG4gICAgICAgICAgICAgICAga2V5cy5wdXNoKGspO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBrZXlzO1xuICAgIH07XG5cbiAgICB2YXIgX2ZvckVhY2ggPSBmdW5jdGlvbiAoYXJyLCBpdGVyYXRvciwgY29udGV4dCkge1xuICAgICAgICBpZiAoIV9pc0FycmF5KGFycikpIHtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChhcnIuZm9yRWFjaCkge1xuICAgICAgICAgICAgYXJyLmZvckVhY2goaXRlcmF0b3IsIGNvbnRleHQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgZm9yICh2YXIga2V5ID0gMCwgbGVuID0gYXJyLmxlbmd0aDsga2V5IDwgbGVuOyBrZXkrKykge1xuICAgICAgICAgICAgICAgIGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgYXJyW2tleV0sIGtleSwgYXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH07XG5cbiAgICBmdW5jdGlvbiBpbmxpbmVDb250ZW50KGRlbGl2ZXJ5KSB7XG4gICAgICAgIHZhciBpbmxpbmVkQ29udGVudCA9IFtdO1xuICAgICAgICB2YXIgY29udGVudEtleU1hcCA9IHt9O1xuXG4gICAgICAgIGlmIChkZWxpdmVyeSkge1xuICAgICAgICAgICAgaWYgKGRlbGl2ZXJ5ICYmIGRlbGl2ZXJ5LmNvbnRlbnQpIHtcbiAgICAgICAgICAgICAgICBfZm9yRWFjaChkZWxpdmVyeS5jb250ZW50WydAZ3JhcGgnXSwgZnVuY3Rpb24gKGNvbnRlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudEtleU1hcFtjb250ZW50WydAaWQnXV0gPSBjb250ZW50O1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBfZm9yRWFjaChkZWxpdmVyeS5yZXN1bHQsIGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXJlc3VsdFsnQGlkJ10pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgIHZhciBjb250ZW50ID0gaW5saW5lQ2hpbGRDb250ZW50KHsnQGlkJzogcmVzdWx0WydAaWQnXX0sIGNvbnRlbnRLZXlNYXApO1xuICAgICAgICAgICAgICAgIGlmIChjb250ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIGlubGluZWRDb250ZW50LnB1c2goY29udGVudCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gaW5saW5lZENvbnRlbnQ7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaW5saW5lQ2hpbGRDb250ZW50KHBhcmVudE5vZGUsIGNvbnRlbnRLZXlNYXApIHtcbiAgICAgICAgX2ZvckVhY2goX2tleXMocGFyZW50Tm9kZSksIGZ1bmN0aW9uIChrZXkpIHtcbiAgICAgICAgICAgIHZhciB2YWx1ZSA9IHBhcmVudE5vZGVba2V5XTtcbiAgICAgICAgICAgIGlmIChrZXkgPT09ICdAaWQnKSB7XG4gICAgICAgICAgICAgICAgaWYgKCFjb250ZW50S2V5TWFwW3ZhbHVlXSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIF9mb3JFYWNoKF9rZXlzKGNvbnRlbnRLZXlNYXBbdmFsdWVdKSwgZnVuY3Rpb24gKGNoaWxkS2V5KSB7XG4gICAgICAgICAgICAgICAgICAgIHBhcmVudE5vZGVbY2hpbGRLZXldID0gY29udGVudEtleU1hcFt2YWx1ZV1bY2hpbGRLZXldO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIF9mb3JFYWNoKF9rZXlzKHBhcmVudE5vZGUpLCBmdW5jdGlvbiAoa2V5KSB7XG4gICAgICAgICAgICB2YXIgdmFsdWUgPSBwYXJlbnROb2RlW2tleV07XG4gICAgICAgICAgICBpZiAodmFsdWUgIT09IG51bGwgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgICAgIHBhcmVudE5vZGVba2V5XSA9IGlubGluZUNoaWxkQ29udGVudChwYXJlbnROb2RlW2tleV0sIGNvbnRlbnRLZXlNYXApO1xuICAgICAgICAgICAgfSBlbHNlIGlmIChfaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgICAgICAgICAgICBfZm9yRWFjaCh2YWx1ZSwgZnVuY3Rpb24gKGl0ZW0sIGkpIHtcbiAgICAgICAgICAgICAgICAgICAgcGFyZW50Tm9kZVtrZXldW2ldID0gaW5saW5lQ2hpbGRDb250ZW50KHBhcmVudE5vZGVba2V5XVtpXSwgY29udGVudEtleU1hcCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBwYXJlbnROb2RlO1xuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIGlubGluZUNvbnRlbnQ6IGlubGluZUNvbnRlbnRcbiAgICB9O1xufSk7XG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
